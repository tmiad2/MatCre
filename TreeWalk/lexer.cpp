/* Generated by re2c 1.3 on Wed Apr 15 14:48:41 2020 */

#define YYMAXFILL 9

#include "lexer.h"

#define YYPEEK() YYCURSOR < YYLIMIT ? string[YYCURSOR].unicode() : 0
#define YYSKIP() ++YYCURSOR
#define YYBACKUP() YYMARKER = YYCURSOR
#define YYBACKUPCTX() YYCTXMARKER = YYCURSOR
#define YYRESTORE() YYCURSOR = YYMARKER
#define YYRESTORECTX() YYCURSOR = YYCTXMARKER
#define YYRESTORERAG(t) YYCURSOR = t
#define YYLESSTHAN(n) YYLIMIT - YYCURSOR < n
#define YYSTAGP(t) t = YYCURSOR
#define YYSTAGPD(t) t = YYCURSOR - 1
#define YYSTAGN(t) t = -1

QVector<Token> lex(const QString &string) {
  QVector<Token> tokens;
  int yyt1;
  int yyt2;

  int YYCURSOR = 0;
  int YYMARKER, o1, o2;
  size_t last_line_loc = 0;
  size_t line = 1;
  const int YYLIMIT = string.size();
  do {
    o1 = 0;
    o2 = 0;

    {
      uint16_t yych;
      unsigned int yyaccept = 0;
      static const unsigned char yybm[] = {
          0,  16, 16, 16,  16,  16,  16,  16,  16,  80,  0,   16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 80, 16,  32,  16,  20,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 16, 16,
          16, 16, 16, 16,  16,  20,  20,  20,  20,  20,  20,  20,  20,  20, 20,
          20, 20, 20, 20,  20,  20,  20,  20,  20,  20,  20,  20,  20,  20, 20,
          20, 16, 0,  16,  16,  20,  16,  148, 148, 148, 148, 148, 148, 20, 20,
          20, 20, 20, 20,  20,  20,  20,  20,  20,  20,  20,  20,  20,  20, 20,
          20, 20, 20, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16, 16, 16, 16,  16,  16,  16,  16,  16,  16,  16,  16,  16,  16, 16,
          16,
      };
      yych = YYPEEK();
      switch (yych) {
      case '\t':
      case ' ':
        goto yy4;
      case '\n':
        YYSTAGP(yyt1);
        goto yy6;
      case '\r':
        YYSTAGP(yyt1);
        goto yy8;
      case '!':
        YYSTAGP(yyt1);
        goto yy9;
      case '"':
        YYSTAGP(yyt1);
        goto yy11;
      case '#':
        YYSTAGP(yyt1);
        goto yy12;
      case '$':
      case 'A':
      case 'B':
      case 'C':
      case 'D':
      case 'E':
      case 'F':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
      case 'L':
      case 'M':
      case 'N':
      case 'O':
      case 'P':
      case 'Q':
      case 'R':
      case 'S':
      case 'T':
      case 'U':
      case 'V':
      case 'W':
      case 'X':
      case 'Y':
      case 'Z':
      case 'a':
      case 'h':
      case 'j':
      case 'k':
      case 'l':
      case 'm':
      case 'o':
      case 'q':
      case 'v':
      case 'x':
      case 'y':
      case 'z':
        YYSTAGP(yyt1);
        goto yy13;
      case '&':
        YYSTAGP(yyt1);
        goto yy16;
      case '\'':
        YYSTAGP(yyt1);
        goto yy17;
      case '(':
        YYSTAGP(yyt1);
        goto yy19;
      case ')':
        YYSTAGP(yyt1);
        goto yy21;
      case '*':
        YYSTAGP(yyt1);
        goto yy23;
      case '+':
        YYSTAGP(yyt1);
        goto yy25;
      case ',':
        YYSTAGP(yyt1);
        goto yy27;
      case '-':
        YYSTAGP(yyt1);
        goto yy29;
      case '.':
        YYSTAGP(yyt1);
        goto yy31;
      case '/':
        YYSTAGP(yyt1);
        goto yy33;
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
        YYSTAGP(yyt1);
        goto yy35;
      case ';':
        YYSTAGP(yyt1);
        goto yy38;
      case '<':
        YYSTAGP(yyt1);
        goto yy40;
      case '=':
        YYSTAGP(yyt1);
        goto yy42;
      case '>':
        YYSTAGP(yyt1);
        goto yy44;
      case '_':
        YYSTAGP(yyt1);
        goto yy46;
      case '`':
        YYSTAGP(yyt1);
        goto yy47;
      case 'b':
        YYSTAGP(yyt1);
        goto yy49;
      case 'c':
        YYSTAGP(yyt1);
        goto yy50;
      case 'd':
        YYSTAGP(yyt1);
        goto yy51;
      case 'e':
        YYSTAGP(yyt1);
        goto yy52;
      case 'f':
        YYSTAGP(yyt1);
        goto yy53;
      case 'g':
        YYSTAGP(yyt1);
        goto yy54;
      case 'i':
        YYSTAGP(yyt1);
        goto yy55;
      case 'n':
        YYSTAGP(yyt1);
        goto yy56;
      case 'p':
        YYSTAGP(yyt1);
        goto yy57;
      case 'r':
        YYSTAGP(yyt1);
        goto yy58;
      case 's':
        YYSTAGP(yyt1);
        goto yy59;
      case 't':
        YYSTAGP(yyt1);
        goto yy60;
      case 'u':
        YYSTAGP(yyt1);
        goto yy61;
      case 'w':
        YYSTAGP(yyt1);
        goto yy62;
      case '{':
        YYSTAGP(yyt1);
        goto yy63;
      case '|':
        YYSTAGP(yyt1);
        goto yy65;
      case '}':
        YYSTAGP(yyt1);
        goto yy66;
      default:
        goto yy2;
      }
    yy2:
      YYSKIP();
    yy3 : {
      tokens.push_back(Token{TokenType::Unknown, QString(""),
                             YYCURSOR - last_line_loc, line});
      continue;
    }
    yy4:
      YYSKIP();
      { continue; }
    yy6:
      YYSKIP();
      YYSTAGP(yyt2);
    yy7:
      o1 = yyt1;
      o2 = yyt2;
      {
        line++;
        last_line_loc = o1;
        continue;
      }
    yy8:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '\n')
        goto yy6;
      YYSTAGP(yyt2);
      goto yy7;
    yy9:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '=')
        goto yy68;
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(Token{TokenType::Not, temp, o1 - last_line_loc, line});
        continue;
      }
    yy11:
      yyaccept = 0;
      YYSKIP();
      YYBACKUP();
      yych = YYPEEK();
      if (yych <= 0x0000)
        goto yy3;
      if (yych == '\n')
        goto yy3;
      goto yy71;
    yy12:
      yyaccept = 0;
      YYSKIP();
      YYBACKUP();
      yych = YYPEEK();
      if (yych <= '[') {
        if (yych == '(')
          goto yy77;
        goto yy3;
      } else {
        if (yych <= '\\')
          goto yy79;
        if (yych == 'u')
          goto yy80;
        goto yy3;
      }
    yy13:
      YYSKIP();
      yych = YYPEEK();
    yy14:
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy15;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy15:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Identifier, temp, o1 - last_line_loc, line});
        continue;
      }
    yy16:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '&')
        goto yy81;
      goto yy3;
    yy17:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::SingleQuote, temp, o1 - last_line_loc, line});
        continue;
      }
    yy19:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::LeftParen, temp, o1 - last_line_loc, line});
        continue;
      }
    yy21:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::RightParen, temp, o1 - last_line_loc, line});
        continue;
      }
    yy23:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Star, temp, o1 - last_line_loc, line});
        continue;
      }
    yy25:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '+')
        goto yy83;
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Plus, temp, o1 - last_line_loc, line});
        continue;
      }
    yy27:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '@')
        goto yy85;
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Comma, temp, o1 - last_line_loc, line});
        continue;
      }
    yy29:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '-')
        goto yy87;
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Minus, temp, o1 - last_line_loc, line});
        continue;
      }
    yy31:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '=')
        goto yy89;
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Period, temp, o1 - last_line_loc, line});
        continue;
      }
    yy33:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Divide, temp, o1 - last_line_loc, line});
        continue;
      }
    yy35:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy37;
      } else if (yybm[0 + yych] & 8) {
        goto yy35;
      }
      if (yych == '.')
        goto yy91;
      YYSTAGP(yyt2);
    yy37:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Number, temp, o1 - last_line_loc, line});
        continue;
      }
    yy38:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Semicolon, temp, o1 - last_line_loc, line});
        continue;
      }
    yy40:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '=')
        goto yy93;
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Lesser, temp, o1 - last_line_loc, line});
        continue;
      }
    yy42:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '=')
        goto yy95;
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Assign, temp, o1 - last_line_loc, line});
        continue;
      }
    yy44:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '=')
        goto yy97;
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Greater, temp, o1 - last_line_loc, line});
        continue;
      }
    yy46:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '_')
        goto yy99;
      goto yy14;
    yy47:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::BackTick, temp, o1 - last_line_loc, line});
        continue;
      }
    yy49:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'r')
        goto yy100;
      goto yy14;
    yy50:
      YYSKIP();
      yych = YYPEEK();
      if (yych <= 'k') {
        if (yych == 'a')
          goto yy101;
        goto yy14;
      } else {
        if (yych <= 'l')
          goto yy102;
        if (yych == 'o')
          goto yy103;
        goto yy14;
      }
    yy51:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'o')
        goto yy104;
      goto yy14;
    yy52:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'l')
        goto yy106;
      if (yych == 'n')
        goto yy107;
      goto yy14;
    yy53:
      YYSKIP();
      yych = YYPEEK();
      if (yych <= 'n') {
        if (yych == 'a')
          goto yy108;
        goto yy14;
      } else {
        if (yych <= 'o')
          goto yy109;
        if (yych == 'u')
          goto yy110;
        goto yy14;
      }
    yy54:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'l')
        goto yy111;
      goto yy14;
    yy55:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'f')
        goto yy112;
      goto yy14;
    yy56:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'i')
        goto yy114;
      goto yy14;
    yy57:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'r')
        goto yy115;
      goto yy14;
    yy58:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy116;
      goto yy14;
    yy59:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'u')
        goto yy117;
      if (yych == 'w')
        goto yy118;
      goto yy14;
    yy60:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'h')
        goto yy119;
      if (yych == 'r')
        goto yy120;
      goto yy14;
    yy61:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'n')
        goto yy121;
      goto yy14;
    yy62:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'h')
        goto yy122;
      goto yy14;
    yy63:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::LeftBrace, temp, o1 - last_line_loc, line});
        continue;
      }
    yy65:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '|')
        goto yy123;
      goto yy3;
    yy66:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::RightBrace, temp, o1 - last_line_loc, line});
        continue;
      }
    yy68:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::BangEqual, temp, o1 - last_line_loc, line});
        continue;
      }
    yy70:
      YYSKIP();
      yych = YYPEEK();
    yy71:
      if (yych & ~0xFF) {
        goto yy70;
      } else if (yybm[0 + yych] & 16) {
        goto yy70;
      }
      if (yych <= '\n')
        goto yy72;
      if (yych <= '"')
        goto yy73;
      goto yy76;
    yy72:
      YYRESTORE();
      if (yyaccept == 0) {
        goto yy3;
      } else {
        YYSTAGP(yyt2);
        goto yy75;
      }
    yy73:
      yyaccept = 1;
      YYSKIP();
      YYBACKUP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        goto yy70;
      } else if (yybm[0 + yych] & 16) {
        goto yy70;
      }
      if (yych <= '\n') {
        YYSTAGP(yyt2);
        goto yy75;
      }
      if (yych <= '"')
        goto yy73;
      goto yy76;
    yy75:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::String, temp, o1 - last_line_loc, line});
        continue;
      }
    yy76:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        goto yy72;
      } else {
        static void *yytarget[256] = {
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy125, &&yy70, &&yy72, &&yy72, &&yy127, &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy125, &&yy72,  &&yy70, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy70, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy70,  &&yy70, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy70, &&yy72,
            &&yy72,  &&yy72,  &&yy70, &&yy72, &&yy70, &&yy72,  &&yy72, &&yy72,
            &&yy128, &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72,
            &&yy72,  &&yy72,  &&yy72, &&yy72, &&yy72, &&yy72,  &&yy72, &&yy72};
        goto *yytarget[yych];
      }
    yy77:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::HashLeftParen, temp, o1 - last_line_loc, line});
        continue;
      }
    yy79:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        if (yych <= 0xD7FF)
          goto yy129;
        if (yych <= 0xDBFF)
          goto yy133;
        goto yy129;
      } else if (yybm[0 + yych] & 128) {
        goto yy131;
      }
      if (yych == '\n')
        goto yy72;
      if (yych <= 0xD7FF)
        goto yy129;
      if (yych <= 0xDBFF)
        goto yy133;
      goto yy129;
    yy80:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '8')
        goto yy134;
      goto yy72;
    yy81:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(Token{TokenType::And, temp, o1 - last_line_loc, line});
        continue;
      }
    yy83:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Increment, temp, o1 - last_line_loc, line});
        continue;
      }
    yy85:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::CommaAt, temp, o1 - last_line_loc, line});
        continue;
      }
    yy87:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Decrement, temp, o1 - last_line_loc, line});
        continue;
      }
    yy89:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::DotAssign, temp, o1 - last_line_loc, line});
        continue;
      }
    yy91:
      YYSKIP();
      yych = YYPEEK();
      if (yych <= '/') {
        YYSTAGP(yyt2);
        goto yy37;
      }
      if (yych <= '9')
        goto yy91;
      YYSTAGP(yyt2);
      goto yy37;
    yy93:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::LesserOrEqual, temp, o1 - last_line_loc, line});
        continue;
      }
    yy95:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Equal, temp, o1 - last_line_loc, line});
        continue;
      }
    yy97:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::GreaterOrEqual, temp, o1 - last_line_loc, line});
        continue;
      }
    yy99:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'F')
        goto yy135;
      if (yych == 'L')
        goto yy136;
      goto yy14;
    yy100:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy137;
      goto yy14;
    yy101:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 's')
        goto yy138;
      goto yy14;
    yy102:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'a')
        goto yy139;
      goto yy14;
    yy103:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'n')
        goto yy140;
      goto yy14;
    yy104:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy105;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy105:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(Token{TokenType::Do, temp, o1 - last_line_loc, line});
        continue;
      }
    yy106:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 's')
        goto yy141;
      goto yy14;
    yy107:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'd')
        goto yy142;
      goto yy14;
    yy108:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'l')
        goto yy144;
      goto yy14;
    yy109:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'r')
        goto yy145;
      goto yy14;
    yy110:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'n')
        goto yy147;
      goto yy14;
    yy111:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'o')
        goto yy148;
      goto yy14;
    yy112:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy113;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy113:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(Token{TokenType::If, temp, o1 - last_line_loc, line});
        continue;
      }
    yy114:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'l')
        goto yy149;
      goto yy14;
    yy115:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'i')
        goto yy151;
      goto yy14;
    yy116:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 't')
        goto yy152;
      goto yy14;
    yy117:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'p')
        goto yy153;
      goto yy14;
    yy118:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'i')
        goto yy154;
      goto yy14;
    yy119:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'i')
        goto yy155;
      goto yy14;
    yy120:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'u')
        goto yy156;
      goto yy14;
    yy121:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 't')
        goto yy157;
      goto yy14;
    yy122:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'i')
        goto yy158;
      goto yy14;
    yy123:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(Token{TokenType::Or, temp, o1 - last_line_loc, line});
        continue;
      }
    yy125:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        goto yy72;
      } else if (yybm[0 + yych] & 64) {
        goto yy125;
      }
      if (yych <= 0x0008)
        goto yy72;
      if (yych <= '\n')
        goto yy70;
      if (yych != '\r')
        goto yy72;
    yy127:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        goto yy70;
      } else if (yybm[0 + yych] & 32) {
        goto yy73;
      }
      if (yych <= 0x0000)
        goto yy72;
      if (yych == '\\')
        goto yy76;
      goto yy70;
    yy128:
      YYSKIP();
      yych = YYPEEK();
      if (yych <= '/')
        goto yy72;
      if (yych <= '9')
        goto yy70;
      if (yych <= '`')
        goto yy72;
      if (yych <= 'f')
        goto yy70;
      goto yy72;
    yy129:
      YYSKIP();
      YYSTAGP(yyt2);
    yy130:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Character, temp, o1 - last_line_loc, line});
        continue;
      }
    yy131:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy130;
      } else if (yybm[0 + yych] & 128) {
        goto yy131;
      }
      YYSTAGP(yyt2);
      goto yy130;
    yy133:
      YYSKIP();
      yych = YYPEEK();
      if (yych <= 0xDBFF) {
        YYSTAGP(yyt2);
        goto yy130;
      }
      if (yych <= 0xDFFF)
        goto yy129;
      YYSTAGP(yyt2);
      goto yy130;
    yy134:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '(')
        goto yy159;
      goto yy72;
    yy135:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'I')
        goto yy161;
      goto yy14;
    yy136:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'I')
        goto yy162;
      goto yy14;
    yy137:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'a')
        goto yy163;
      goto yy14;
    yy138:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy164;
      goto yy14;
    yy139:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 's')
        goto yy166;
      goto yy14;
    yy140:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 't')
        goto yy167;
      goto yy14;
    yy141:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy168;
      goto yy14;
    yy142:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy143;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy143:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(Token{TokenType::End, temp, o1 - last_line_loc, line});
        continue;
      }
    yy144:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 's')
        goto yy170;
      goto yy14;
    yy145:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy146;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy146:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(Token{TokenType::For, temp, o1 - last_line_loc, line});
        continue;
      }
    yy147:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'c')
        goto yy171;
      goto yy14;
    yy148:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'b')
        goto yy172;
      goto yy14;
    yy149:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy150;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy150:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(Token{TokenType::Nil, temp, o1 - last_line_loc, line});
        continue;
      }
    yy151:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'n')
        goto yy173;
      goto yy14;
    yy152:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'u')
        goto yy174;
      goto yy14;
    yy153:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy175;
      goto yy14;
    yy154:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 't')
        goto yy176;
      goto yy14;
    yy155:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 's')
        goto yy177;
      goto yy14;
    yy156:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy179;
      goto yy14;
    yy157:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'i')
        goto yy181;
      goto yy14;
    yy158:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'l')
        goto yy182;
      goto yy14;
    yy159:
      YYSKIP();
      YYSTAGP(yyt2);
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::HashU8LeftParen, temp, o1 - last_line_loc, line});
        continue;
      }
    yy161:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'L')
        goto yy183;
      goto yy14;
    yy162:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'N')
        goto yy184;
      goto yy14;
    yy163:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'k')
        goto yy185;
      goto yy14;
    yy164:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy165;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy165:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Case, temp, o1 - last_line_loc, line});
        continue;
      }
    yy166:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 's')
        goto yy187;
      goto yy14;
    yy167:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'i')
        goto yy189;
      goto yy14;
    yy168:
      YYSKIP();
      yych = YYPEEK();
      if (yych <= 'Z') {
        if (yych <= '/') {
          if (yych == '$')
            goto yy13;
          YYSTAGP(yyt2);
        } else {
          if (yych <= '9')
            goto yy13;
          if (yych >= 'A')
            goto yy13;
          YYSTAGP(yyt2);
        }
      } else {
        if (yych <= '`') {
          if (yych == '_')
            goto yy13;
          YYSTAGP(yyt2);
        } else {
          if (yych == 'i')
            goto yy190;
          if (yych <= 'z')
            goto yy13;
          YYSTAGP(yyt2);
        }
      }
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Else, temp, o1 - last_line_loc, line});
        continue;
      }
    yy170:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy191;
      goto yy14;
    yy171:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 't')
        goto yy193;
      goto yy14;
    yy172:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'a')
        goto yy194;
      goto yy14;
    yy173:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 't')
        goto yy195;
      goto yy14;
    yy174:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'r')
        goto yy197;
      goto yy14;
    yy175:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'r')
        goto yy198;
      goto yy14;
    yy176:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'c')
        goto yy200;
      goto yy14;
    yy177:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy178;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy178:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::This, temp, o1 - last_line_loc, line});
        continue;
      }
    yy179:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy180;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy180:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::True, temp, o1 - last_line_loc, line});
        continue;
      }
    yy181:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'l')
        goto yy201;
      goto yy14;
    yy182:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy203;
      goto yy14;
    yy183:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'E')
        goto yy205;
      goto yy14;
    yy184:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'E')
        goto yy206;
      goto yy14;
    yy185:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy186;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy186:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Break, temp, o1 - last_line_loc, line});
        continue;
      }
    yy187:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy188;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy188:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Class, temp, o1 - last_line_loc, line});
        continue;
      }
    yy189:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'n')
        goto yy207;
      goto yy14;
    yy190:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'f')
        goto yy208;
      goto yy14;
    yy191:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy192;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy192:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::False, temp, o1 - last_line_loc, line});
        continue;
      }
    yy193:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'i')
        goto yy210;
      goto yy14;
    yy194:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'l')
        goto yy211;
      goto yy14;
    yy195:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy196;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy196:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Print, temp, o1 - last_line_loc, line});
        continue;
      }
    yy197:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'n')
        goto yy213;
      goto yy14;
    yy198:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy199;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy199:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Super, temp, o1 - last_line_loc, line});
        continue;
      }
    yy200:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'h')
        goto yy215;
      goto yy14;
    yy201:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy202;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy202:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Until, temp, o1 - last_line_loc, line});
        continue;
      }
    yy203:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy204;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy204:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::While, temp, o1 - last_line_loc, line});
        continue;
      }
    yy205:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '_')
        goto yy217;
      goto yy14;
    yy206:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '_')
        goto yy218;
      goto yy14;
    yy207:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'u')
        goto yy219;
      goto yy14;
    yy208:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy209;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy209:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Elseif, temp, o1 - last_line_loc, line});
        continue;
      }
    yy210:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'o')
        goto yy220;
      goto yy14;
    yy211:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy212;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy212:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Global, temp, o1 - last_line_loc, line});
        continue;
      }
    yy213:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy214;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy214:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Return, temp, o1 - last_line_loc, line});
        continue;
      }
    yy215:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy216;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy216:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Switch, temp, o1 - last_line_loc, line});
        continue;
      }
    yy217:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '_')
        goto yy221;
      goto yy14;
    yy218:
      YYSKIP();
      yych = YYPEEK();
      if (yych == '_')
        goto yy223;
      goto yy14;
    yy219:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'e')
        goto yy225;
      goto yy14;
    yy220:
      YYSKIP();
      yych = YYPEEK();
      if (yych == 'n')
        goto yy227;
      goto yy14;
    yy221:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy222;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy222:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::FILE, temp, o1 - last_line_loc, line});
        continue;
      }
    yy223:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy224;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy224:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::LINE, temp, o1 - last_line_loc, line});
        continue;
      }
    yy225:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy226;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy226:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Continue, temp, o1 - last_line_loc, line});
        continue;
      }
    yy227:
      YYSKIP();
      yych = YYPEEK();
      if (yych & ~0xFF) {
        YYSTAGP(yyt2);
        goto yy228;
      } else if (yybm[0 + yych] & 4) {
        goto yy13;
      }
      YYSTAGP(yyt2);
    yy228:
      o1 = yyt1;
      o2 = yyt2;
      {
        auto len = o2 - o1;
        auto temp = string.mid(o1, len);
        tokens.push_back(
            Token{TokenType::Function, temp, o1 - last_line_loc, line});
        continue;
      }
    }

  } while (YYCURSOR < YYLIMIT);
  return tokens;
}
